{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi David,\n \nI very much enjoyed your show at http://channel9.msdn.com, together with Ale Contenti, and I'm glad to hear that SafeInt is doing so well at Microsoft.\n \nYou have clearly put a lot of effort into the performance of SafeInt, but there may still be another opportunity.  I got the impression from your presentation that users often deal with SafeInt objects that are created on the fly, as unnamed temporary objects (\"rvalues\"). For example, when i and j are built-in integers, a user might do:\n \n  result = SafeInt<int>(i) + j;\n \nThis will call your operator+ template member function:\n \n    template < typename U >\n    SafeInt< T, E > operator +( U rhs ) const\n \nNow when the optimizer applies \"copy elision\", you might save a few machine instructions, by having operator+ as a non-member friend function instead:\n \n    template < typename U >\n    friend SafeInt< T, E > operator +(SafeInt< T, E > lhs, U rhs )\n    {\n        details::AdditionHelper< T, T, E >::Addition( lhs.m_int, rhs, lhs.m_int );\n        return lhs;   \n    }\n \nThe C++ Standard allows the compiler to skip a copy-construction, when the unnamed temporary, SafeInt<int>(i), is passed \"by value\" to a function.  And indeed, looking at the ASM code of a little SafeInt<int> test (generated by VC++ 2010 beta 1, release configuration), the \"friend version\" skips a few instructions, that the original version does:\n \n\tlea\teax, DWORD PTR $T5821[ebp]\n\tmov\tDWORD PTR $T5821[ebp], edx\n \nHonestly I haven't yet tested extensively, but it looks like there's some gain here...\n \nHTH, Niels",
    "LastUpdatedDate": "2013-02-13T18:31:04.21-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "SafeInt",
    "ReportedDate": "2009-06-19T16:03:19.5-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Potential performance gain from non-member operator+",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 7910
  },
  "FileAttachments": [],
  "Comments": []
}